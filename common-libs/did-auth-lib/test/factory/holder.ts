export const holderEncryptedSeed = 'ae8086e3a1b84918d2815f6cd3dbb2ed2043a4f2ad5b1942f73c615eec7eddae01e540ef7efff7d09046533f9b7559f07ce573554f55c81214ef567b908c71f72f0ea17e7991509289334a187ceabbaff662f03b0a36c91e7584c416ef55bee6'
export const holderEncryptionKey = 'JCi+OHEJOJ1e1gjlh1zmRAgyBELXroVR'
export const holderFullDid = 'did:elem:EiBIGsSwUEe5hVR9yeysYY4LgW-MIz98bA6JZmaXKhxW9A;elem:initial-state=eyJwcm90ZWN0ZWQiOiJleUp2Y0dWeVlYUnBiMjRpT2lKamNtVmhkR1VpTENKcmFXUWlPaUlqY0hKcGJXRnllU0lzSW1Gc1p5STZJa1ZUTWpVMlN5SjkiLCJwYXlsb2FkIjoiZXlKQVkyOXVkR1Y0ZENJNkltaDBkSEJ6T2k4dmR6TnBaQzV2Y21jdmMyVmpkWEpwZEhrdmRqSWlMQ0p3ZFdKc2FXTkxaWGtpT2x0N0ltbGtJam9pSTNCeWFXMWhjbmtpTENKMWMyRm5aU0k2SW5OcFoyNXBibWNpTENKMGVYQmxJam9pVTJWamNESTFObXN4Vm1WeWFXWnBZMkYwYVc5dVMyVjVNakF4T0NJc0luQjFZbXhwWTB0bGVVaGxlQ0k2SWpBeU4ySTFPRFJpT1RZd09UUXpOREExTkRkaVlqbGhNVFkzWmpsa05EZzFOVEUzTmpRek1HWXhNalF3T1RBMk5EVXlNVGhsTjJNeE5qSmxaall3TjJVMFppSjlMSHNpYVdRaU9pSWpjbVZqYjNabGNua2lMQ0oxYzJGblpTSTZJbkpsWTI5MlpYSjVJaXdpZEhsd1pTSTZJbE5sWTNBeU5UWnJNVlpsY21sbWFXTmhkR2x2Ymt0bGVUSXdNVGdpTENKd2RXSnNhV05MWlhsSVpYZ2lPaUl3TWprNFptVm1NbUV3Tm1Wa1pqRTFOV1UxTVRjME16RTFOelkyTnpRMk1HWmpaREZsTmpNMFl6aGlZelU1WkRRMU5ERmpObUkzT1dJMllqQXlORFJqT1dVaWZWMHNJbUYxZEdobGJuUnBZMkYwYVc5dUlqcGJJaU53Y21sdFlYSjVJbDBzSW1GemMyVnlkR2x2YmsxbGRHaHZaQ0k2V3lJamNISnBiV0Z5ZVNKZGZRIiwic2lnbmF0dXJlIjoidDRONkRKRC1ncklCQ0YyTVRMa3RCR1RKdW9WZVYxQ3JWSndqV0NJVUx1c1pfdzlSUHVfU2dtNi1tMFF5RmpUNXlKWXBrV3IxQ2dWelJHcmVZb2ctbncifQ'
export const holderDid = 'did:elem:EiBIGsSwUEe5hVR9yeysYY4LgW-MIz98bA6JZmaXKhxW9A'
export const holderToken = 
  'eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NksifQ.eyJpbnRlcmFjdGlvblRva2VuIjpudWxsLCJleHAiOjE2NjkyMDk3NjUyMjksInR5cCI6IkRpZEF1dGhSZXNwb25zZSIsImp0aSI6ImQ3NGFiOThkNmU1NzVmMzciLCJhdWQiOiJkaWQ6ZWxlbTpFaURTTk5HODI0SDNGN0NmU2ZoRHVveERtOThBZ2p3cnZFTmRTd21tV2RKSEZBO2VsZW06aW5pdGlhbC1zdGF0ZT1leUp3Y205MFpXTjBaV1FpT2lKbGVVcDJZMGRXZVZsWVVuQmlNalJwVDJsS2FtTnRWbWhrUjFWcFRFTktjbUZYVVdsUGFVbHFZMGhLY0dKWFJubGxVMGx6U1cxR2MxcDVTVFpKYTFaVVRXcFZNbE41U2praUxDSndZWGxzYjJGa0lqb2laWGxLUVZreU9YVmtSMVkwWkVOSk5rbHRhREJrU0VKNlQyazRkbVI2VG5CYVF6VjJZMjFqZG1NeVZtcGtXRXB3WkVocmRtUnFTV2xNUTBwM1pGZEtjMkZYVGt4YVdHdHBUMngwTjBsdGJHdEphbTlwU1ROQ2VXRlhNV2hqYm10cFRFTktNV015Um01YVUwazJTVzVPY0ZveU5YQmliV05wVEVOS01HVllRbXhKYW05cFZUSldhbU5FU1RGT2JYTjRWbTFXZVdGWFduQlpNa1l3WVZjNWRWTXlWalZOYWtGNFQwTkpjMGx1UWpGWmJYaHdXVEIwYkdWVmFHeGxRMGsyU1dwQmVrMXRVbXROUjBWNVdsZEdhbHBVV1RCYVZGWm9UVVJWZWxwcVl6Rk5WMFV6V2xScmVrNUViR3RQUkUwMVdWUlNhVTU2VG1oYWFrNXRXWHBTYUU5WFZteGFha1pwVGtSTk1FNTZXbXhQUkdSdFQxZEthRTU1U2psTVNITnBZVmRSYVU5cFNXcGpiVlpxWWpOYWJHTnVhMmxNUTBveFl6SkdibHBUU1RaSmJrcHNXVEk1TWxwWVNqVkphWGRwWkVoc2QxcFRTVFpKYkU1c1dUTkJlVTVVV25KTlZscHNZMjFzYldGWFRtaGtSMngyWW10MGJHVlVTWGROVkdkcFRFTktkMlJYU25OaFYwNU1XbGhzU1ZwWVoybFBhVWwzVFdwTk5WcHFVbWhOZWs1c1dWZFJNVTlYU21wWmVtZDZXWHBuZVUxNldYbGFSRVpyVFRKRmVFNHlSbXRQVjBwcVdsUm9iRnBVUlRGT2VtYzFUbXBOTWsxRVpHbE9lbFpwVFdwQk1rMHlXWHBPZWtGNldrUmphV1pXTUhOSmJVWXhaRWRvYkdKdVVuQlpNa1l3WVZjNWRVbHFjR0pKYVU1M1kyMXNkRmxZU2pWSmJEQnpTVzFHZW1NeVZubGtSMngyWW1zeGJHUkhhSFphUTBrMlYzbEphbU5JU25CaVYwWjVaVk5LWkdaUklpd2ljMmxuYm1GMGRYSmxJam9pY25KVVlrVTNaR1Z3VW5WWFRVSldSa3hWTVRSbU1uSXRibTk0ZGtSVmVYbzVTV05oV25wbmFEWnBVVmh0V25KTFlUUk9NMmxDWjFsQ1RHRnhabWRrWTJvemJrUmhVakI0U1ZWR2VISnpZVFUzVmpCNmNHY2lmUSIsInJlcXVlc3RUb2tlbiI6ImV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSkZVekkxTmtzaWZRLmV5SnBiblJsY21GamRHbHZibFJ2YTJWdUlqcHVkV3hzTENKbGVIQWlPakUyTmpreU1EazNOalV4TmpZc0luUjVjQ0k2SWtScFpFRjFkR2hTWlhGMVpYTjBJaXdpYW5ScElqb2laRGMwWVdJNU9HUTJaVFUzTldZek55SXNJbUYxWkNJNkltUnBaRHBsYkdWdE9rVnBRa2xIYzFOM1ZVVmxOV2hXVWpsNVpYbHpXVmswVEdkWExVMUplams0WWtFMlNscHRZVmhMYUhoWE9VRWlMQ0pqY21WaGRHVmtRWFFpT2pFMk1EY3dNREUzTmpVeE5qWXNJbXRwWkNJNkltUnBaRHBsYkdWdE9rVnBSRk5PVGtjNE1qUklNMFkzUTJaVFptaEVkVzk0UkcwNU9FRm5hbmR5ZGtWT1pGTjNiVzFYWkVwSVJrRWpjSEpwYldGeWVTSXNJbWx6Y3lJNkltUnBaRHBsYkdWdE9rVnBSRk5PVGtjNE1qUklNMFkzUTJaVFptaEVkVzk0UkcwNU9FRm5hbmR5ZGtWT1pGTjNiVzFYWkVwSVJrRTdaV3hsYlRwcGJtbDBhV0ZzTFhOMFlYUmxQV1Y1U25kamJUa3dXbGRPTUZwWFVXbFBhVXBzWlZWd01sa3daRmRsVm14WlZXNUNhVTFxVW5CVU1teExZVzFPZEZadGFHdFNNVlp3VkVWT1MyTnRSbGhWVjJ4UVlWVnNjVmt3YUV0alIwcFlVbTVzYkZVd2JIcFRWekZIWXpGd05WTlVXa3BoTVZwVlZGZHdWazFzVGpWVGFtdHBURU5LZDFsWWJITmlNa1pyU1dwdmFWcFliRXRSVm10NVQxaFdhMUl4V1RCYVJVNUtUbXRzZEdGRVFtdFRSVW8yVkRKck5HUnRValpVYmtKaFVYcFdNbGt5TVdwa2JVMTVWbTF3YTFkRmNIZGFSV2h5WkcxU2NWTlhiRTFSTUhBeldrWmtTMk15UmxoVWEzaGhWMGQwY0ZReWVEQk9NR3gwWWtkMFNtRnRPWEJUVkU1RFpWZEdXRTFYYUdwaWJYUndWRVZPUzAxWFRYbFNiVFZoVlRCck1sTlhOVTlqUm05NVRsaENhV0pYVG5CVVJVNUxUVWRXV1ZGdGVFcGhiVGx3VmxSS1YyRnRUa1ZUVkVaUFlsaE9ORlp0TVZkbFYwWllWMjVDV2sxcldYZFpWbU0xWkZaTmVWWnFWazVoYTBZMFZEQk9TbU13YkhWUmFrWmFZbGhvZDFkVVFqQmlSMVpXWVVkNGJGRXdhekpUVjNCQ1pXc3hkRlZ0ZEU1U01GWTFWMnhrUjJGc2NGVlhWRUpoVmtaYWIxUlZVbFpsYkhCeFdYcEdUbFl3VlhwWGJGSnlaV3MxUldKSGRGQlNSVEF4VjFaU1UyRlZOVFpVYldoaFlXczFkRmRZY0ZOaFJUbFlWbTE0WVdGclduQlVhMUpPVFVVMU5sZHRlRkJTUjFKMFZERmtTMkZGTlRWVGFteE5VMGhPY0ZsV1pGSmhWVGx3VTFkd2FtSldXbkZaYWs1aFlrZE9kV0V5YkUxUk1HOTRXWHBLUjJKc2NGUlRWRnBLWW10d2MxZFVTVFZOYkhCWlUycFdTbUZZWkhCYVJXaHpaREZ3VkZOVVdrcGlSVFZ6VjFST1FtVlZOVlZYYmtwT1ZteHdjMWt5TVhOaVYwWllWRzFvYTFJeWVESlpiWFF3WWtkV1ZWTllaRTVXUjJSd1ZFVk9TMlF5VWxoVGJrNW9WakExVFZkc2FITlRWbkJaV2pKc1VHRlZiRE5VVjNCT1RsWndjVlZ0YUU1bGF6VnpWMVprVWsxVk9WaFRiWEJhWlcxa05sZFljRzVsVlRFMlYxaHNZVkpGV25KVVZFcEdaVVUwZVZKdGRGQldNSEJ4VjJ4U2IySkdjRlZTVkVaUFpXMWpNVlJ0Y0U1TmF6RkZXa2RzVDJWc1duQlVWM0JDVFdzd2VWZFljRTlsYTBZMlYydFNhbUZYV2xkTlNFNUtZbFZaZUZwRlpHOWlSMHAxVlc1Q1drMXJXWGRaVm1NMVpGVnNjV05IU2twaFZUVXpXVEl4YzJSR2JGbFRhbFpLWWtSQ2VsTlhNVWRsYlUxNVZtNXNhMUl5ZURKWmJYTjRZa2RTU0dGSVdtRlJNR3N5VmpOc1NtRnRUa2xUYmtKcFZqQmFOVnBXVGt0YVIxcFNTV2wzYVdNeWJHNWliVVl3WkZoS2JFbHFiMmxqYmtwVldXdFZNMXBIVm5kVmJsWllWRlZLVjFKcmVGWk5WRkp0VFc1SmRHSnRPVFJrYTFKV1pWaHZOVk5YVG1oWGJuQnVZVVJhY0ZWV2FIUlhia3BNV1ZSU1QwMHliRU5hTVd4RFZFZEdlRnB0Wkd0Wk1tOTZZbXRTYUZWcVFqUlRWbFpIWlVoS2VsbFVWVE5XYWtJMlkwZGphV1pSSW4wLmY0NTQ2M2Y0Y2E1NjRjMzgwMDAwNThkMDZhNWQ3YjAwM2Y2MjJhZGYzYjkyYjhkYTFmM2JhZGI1YTM0OTg4MGIxYjAzZGE3YTkyMmMyMzA5NDc1ZjhkNTVjZTEzMDAwZDEzMGEwYzE2MzZlYTY4OWJhYjlkNTc2N2Y0NmUzZTZiIiwiY3JlYXRlZEF0IjoxNjA3MDAxNzY1MjI5LCJraWQiOiJkaWQ6ZWxlbTpFaUJJR3NTd1VFZTVoVlI5eWV5c1lZNExnVy1NSXo5OGJBNkpabWFYS2h4VzlBI3ByaW1hcnkiLCJpc3MiOiJkaWQ6ZWxlbTpFaUJJR3NTd1VFZTVoVlI5eWV5c1lZNExnVy1NSXo5OGJBNkpabWFYS2h4VzlBO2VsZW06aW5pdGlhbC1zdGF0ZT1leUp3Y205MFpXTjBaV1FpT2lKbGVVcDJZMGRXZVZsWVVuQmlNalJwVDJsS2FtTnRWbWhrUjFWcFRFTktjbUZYVVdsUGFVbHFZMGhLY0dKWFJubGxVMGx6U1cxR2MxcDVTVFpKYTFaVVRXcFZNbE41U2praUxDSndZWGxzYjJGa0lqb2laWGxLUVZreU9YVmtSMVkwWkVOSk5rbHRhREJrU0VKNlQyazRkbVI2VG5CYVF6VjJZMjFqZG1NeVZtcGtXRXB3WkVocmRtUnFTV2xNUTBwM1pGZEtjMkZYVGt4YVdHdHBUMngwTjBsdGJHdEphbTlwU1ROQ2VXRlhNV2hqYm10cFRFTktNV015Um01YVUwazJTVzVPY0ZveU5YQmliV05wVEVOS01HVllRbXhKYW05cFZUSldhbU5FU1RGT2JYTjRWbTFXZVdGWFduQlpNa1l3WVZjNWRWTXlWalZOYWtGNFQwTkpjMGx1UWpGWmJYaHdXVEIwYkdWVmFHeGxRMGsyU1dwQmVVNHlTVEZQUkZKcFQxUlpkMDlVVVhwT1JFRXhUa1JrYVZscWJHaE5WRmt6V21wc2EwNUVaekZPVkVVelRtcFJlazFIV1hoTmFsRjNUMVJCTWs1RVZYbE5WR2hzVGpKTmVFNXFTbXhhYWxsM1RqSlZNRnBwU2psTVNITnBZVmRSYVU5cFNXcGpiVlpxWWpOYWJHTnVhMmxNUTBveFl6SkdibHBUU1RaSmJrcHNXVEk1TWxwWVNqVkphWGRwWkVoc2QxcFRTVFpKYkU1c1dUTkJlVTVVV25KTlZscHNZMjFzYldGWFRtaGtSMngyWW10MGJHVlVTWGROVkdkcFRFTktkMlJYU25OaFYwNU1XbGhzU1ZwWVoybFBhVWwzVFdwck5GcHRWbTFOYlVWM1RtMVdhMXBxUlRGT1YxVXhUVlJqTUUxNlJURk9lbGt5VG5wUk1rMUhXbXBhUkVac1RtcE5NRmw2YUdsWmVsVTFXa1JSTVU1RVJtcE9iVWt6VDFkSk1sbHFRWGxPUkZKcVQxZFZhV1pXTUhOSmJVWXhaRWRvYkdKdVVuQlpNa1l3WVZjNWRVbHFjR0pKYVU1M1kyMXNkRmxZU2pWSmJEQnpTVzFHZW1NeVZubGtSMngyWW1zeGJHUkhhSFphUTBrMlYzbEphbU5JU25CaVYwWjVaVk5LWkdaUklpd2ljMmxuYm1GMGRYSmxJam9pZERST05rUktSQzFuY2tsQ1EwWXlUVlJNYTNSQ1IxUktkVzlXWlZZeFEzSldTbmRxVjBOSlZVeDFjMXBmZHpsU1VIVmZVMmR0TmkxdE1GRjVSbXBVTlhsS1dYQnJWM0l4UTJkV2VsSkhjbVZaYjJjdGJuY2lmUSJ9.76caeca1836d0f1bfbf1ff81007428ddaf353c625e64dc0c26d3dea55c230d8f6aa84d6c3900f89802a70e8afd32ef3250fd994c5c36256737482d9cfd3bc79b'
